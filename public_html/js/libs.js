'use strict';

var i = 1;
setTimeout(function run() {
   func(i);
   setTimeout(run, 100);
}, 100);

;(function (d) {
   function template(id, data) {
      if (d.getElementById(id) !== null) {
         return Template7.compile(d.getElementById(id).innerHTML)(data || {});
      }
      return '';
   }
   window.template = template;
})(document);

var addEvent = function () {
   var filter = function filter(el, type, fn) {
      for (var _i = 0, len = el.length; _i < len; _i++) {
         addEvent(el[_i], type, fn);
      }
   };
   if (document.addEventListener) {
      return function (el, type, fn) {
         if (el && el.nodeName || el === window) {
            el.addEventListener(type, fn, false);
         } else if (el && el.length) {
            filter(el, type, fn);
         }
      };
   }

   return function (el, type, fn) {
      if (el && el.nodeName || el === window) {
         el.attachEvent('on' + type, function () {
            return fn.call(el, window.event);
         });
      } else if (el && el.length) {
         filter(el, type, fn);
      }
   };
}();

// addEvent(document.getElementsByTagName('a'), 'click', fn);

var $ = function $(el) {
   return document.querySelectorAll(el);
};

// $('.box');

var lazyload = function lazyload(container, settings) {
   var lazyClass = 'js-lazyload-images';
   require(['jquery', 'lib/jquery.lazyload'], function ($) {
      var node = $(container);
      var $lazyNode = $('.' + lazyClass, node);
      $lazyNode.lazyload(settings).removeClass(lazyClass);
      node.scroll();
   });
};

/*
window.addEventListener('popstate', e => {
   const state = e.state;
   if(!state) return;
   if(state.layer) {
      create_layer(state.layer, JSON.parse(state.settings));
   }
}, false);
*/
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9oZWxwZXJzLmpzIl0sIm5hbWVzIjpbImkiLCJzZXRUaW1lb3V0IiwicnVuIiwiZnVuYyIsInRlbXBsYXRlIiwiaWQiLCJkYXRhIiwiZCIsImdldEVsZW1lbnRCeUlkIiwiVGVtcGxhdGU3IiwiY29tcGlsZSIsImlubmVySFRNTCIsIndpbmRvdyIsImRvY3VtZW50IiwiYWRkRXZlbnQiLCJmaWx0ZXIiLCJlbCIsInR5cGUiLCJmbiIsImxlbiIsImxlbmd0aCIsImFkZEV2ZW50TGlzdGVuZXIiLCJub2RlTmFtZSIsImF0dGFjaEV2ZW50IiwiY2FsbCIsImV2ZW50IiwiJCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsYXp5bG9hZCIsImNvbnRhaW5lciIsInNldHRpbmdzIiwibGF6eUNsYXNzIiwicmVxdWlyZSIsIm5vZGUiLCIkbGF6eU5vZGUiLCJyZW1vdmVDbGFzcyIsInNjcm9sbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxJQUFJLENBQVI7QUFDQUMsV0FBVyxTQUFTQyxHQUFULEdBQWU7QUFDdEJDLFFBQUtILENBQUw7QUFDQUMsY0FBV0MsR0FBWCxFQUFnQixHQUFoQjtBQUNILENBSEQsRUFHRyxHQUhIOztBQUtBLENBQUMsQ0FBRSxhQUFLO0FBQ0osWUFBU0UsUUFBVCxDQUFrQkMsRUFBbEIsRUFBc0JDLElBQXRCLEVBQTRCO0FBQ3hCLFVBQUlDLEVBQUVDLGNBQUYsQ0FBaUJILEVBQWpCLE1BQXlCLElBQTdCLEVBQW1DO0FBQy9CLGdCQUFPSSxVQUFVQyxPQUFWLENBQWtCSCxFQUFFQyxjQUFGLENBQWlCSCxFQUFqQixFQUFxQk0sU0FBdkMsRUFBa0RMLFFBQVEsRUFBMUQsQ0FBUDtBQUNIO0FBQ0QsYUFBTyxFQUFQO0FBQ0g7QUFDRE0sVUFBT1IsUUFBUCxHQUFrQkEsUUFBbEI7QUFDSCxDQVJBLEVBUUdTLFFBUkg7O0FBVUQsSUFBTUMsV0FBYSxZQUFNO0FBQ3RCLE9BQU1DLFNBQVMsU0FBVEEsTUFBUyxDQUFDQyxFQUFELEVBQUtDLElBQUwsRUFBV0MsRUFBWCxFQUFrQjtBQUM5QixXQUFLLElBQUlsQixLQUFJLENBQVIsRUFBV21CLE1BQU1ILEdBQUdJLE1BQXpCLEVBQWlDcEIsS0FBSW1CLEdBQXJDLEVBQTBDbkIsSUFBMUMsRUFBK0M7QUFDNUNjLGtCQUFTRSxHQUFHaEIsRUFBSCxDQUFULEVBQWdCaUIsSUFBaEIsRUFBc0JDLEVBQXRCO0FBQ0Y7QUFDSCxJQUpEO0FBS0EsT0FBSUwsU0FBU1EsZ0JBQWIsRUFBK0I7QUFDNUIsYUFBTyxVQUFDTCxFQUFELEVBQUtDLElBQUwsRUFBV0MsRUFBWCxFQUFrQjtBQUN0QixhQUFJRixNQUFNQSxHQUFHTSxRQUFULElBQXFCTixPQUFPSixNQUFoQyxFQUF3QztBQUNyQ0ksZUFBR0ssZ0JBQUgsQ0FBb0JKLElBQXBCLEVBQTBCQyxFQUExQixFQUE4QixLQUE5QjtBQUNGLFVBRkQsTUFFTyxJQUFJRixNQUFNQSxHQUFHSSxNQUFiLEVBQXFCO0FBQ3pCTCxtQkFBT0MsRUFBUCxFQUFXQyxJQUFYLEVBQWlCQyxFQUFqQjtBQUNGO0FBQ0gsT0FORDtBQU9GOztBQUVELFVBQU8sVUFBQ0YsRUFBRCxFQUFLQyxJQUFMLEVBQVdDLEVBQVgsRUFBa0I7QUFDdEIsVUFBSUYsTUFBTUEsR0FBR00sUUFBVCxJQUFxQk4sT0FBT0osTUFBaEMsRUFBd0M7QUFDckNJLFlBQUdPLFdBQUgsUUFBb0JOLElBQXBCLEVBQTRCO0FBQUEsbUJBQU1DLEdBQUdNLElBQUgsQ0FBUVIsRUFBUixFQUFZSixPQUFPYSxLQUFuQixDQUFOO0FBQUEsVUFBNUI7QUFDRixPQUZELE1BRU8sSUFBSVQsTUFBTUEsR0FBR0ksTUFBYixFQUFxQjtBQUN6QkwsZ0JBQU9DLEVBQVAsRUFBV0MsSUFBWCxFQUFpQkMsRUFBakI7QUFDRjtBQUNILElBTkQ7QUFPRixDQXZCZ0IsRUFBakI7O0FBeUJBOztBQUVBLElBQU1RLElBQUksU0FBSkEsQ0FBSTtBQUFBLFVBQU1iLFNBQVNjLGdCQUFULENBQTBCWCxFQUExQixDQUFOO0FBQUEsQ0FBVjs7QUFFQTs7QUFFQSxJQUFNWSxXQUFXLFNBQVhBLFFBQVcsQ0FBQ0MsU0FBRCxFQUFZQyxRQUFaLEVBQXlCO0FBQ3ZDLE9BQU1DLFlBQVksb0JBQWxCO0FBQ0FDLFdBQVEsQ0FBQyxRQUFELEVBQVcscUJBQVgsQ0FBUixFQUEyQyxhQUFLO0FBQzdDLFVBQU1DLE9BQU9QLEVBQUVHLFNBQUYsQ0FBYjtBQUNBLFVBQU1LLFlBQVlSLFFBQU1LLFNBQU4sRUFBbUJFLElBQW5CLENBQWxCO0FBQ0FDLGdCQUFVTixRQUFWLENBQW1CRSxRQUFuQixFQUE2QkssV0FBN0IsQ0FBeUNKLFNBQXpDO0FBQ0FFLFdBQUtHLE1BQUw7QUFDRixJQUxEO0FBTUYsQ0FSRDs7QUFVQSIsImZpbGUiOiJfaGVscGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpID0gMTtcbnNldFRpbWVvdXQoZnVuY3Rpb24gcnVuKCkge1xuICAgIGZ1bmMoaSk7XG4gICAgc2V0VGltZW91dChydW4sIDEwMCk7XG59LCAxMDApO1xuXG47KChkID0+IHtcbiAgICBmdW5jdGlvbiB0ZW1wbGF0ZShpZCwgZGF0YSkge1xuICAgICAgICBpZiAoZC5nZXRFbGVtZW50QnlJZChpZCkgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBUZW1wbGF0ZTcuY29tcGlsZShkLmdldEVsZW1lbnRCeUlkKGlkKS5pbm5lckhUTUwpKGRhdGEgfHwge30pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgd2luZG93LnRlbXBsYXRlID0gdGVtcGxhdGU7XG59KSkoZG9jdW1lbnQpO1xuXG5jb25zdCBhZGRFdmVudCA9ICgoKCkgPT4ge1xuICAgY29uc3QgZmlsdGVyID0gKGVsLCB0eXBlLCBmbikgPT4ge1xuICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IGVsLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICBhZGRFdmVudChlbFtpXSwgdHlwZSwgZm4pO1xuICAgICAgfVxuICAgfTtcbiAgIGlmIChkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gKGVsLCB0eXBlLCBmbikgPT4ge1xuICAgICAgICAgaWYgKGVsICYmIGVsLm5vZGVOYW1lIHx8IGVsID09PSB3aW5kb3cpIHtcbiAgICAgICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgZm4sIGZhbHNlKTtcbiAgICAgICAgIH0gZWxzZSBpZiAoZWwgJiYgZWwubGVuZ3RoKSB7XG4gICAgICAgICAgICBmaWx0ZXIoZWwsIHR5cGUsIGZuKTtcbiAgICAgICAgIH1cbiAgICAgIH07XG4gICB9XG4gXG4gICByZXR1cm4gKGVsLCB0eXBlLCBmbikgPT4ge1xuICAgICAgaWYgKGVsICYmIGVsLm5vZGVOYW1lIHx8IGVsID09PSB3aW5kb3cpIHtcbiAgICAgICAgIGVsLmF0dGFjaEV2ZW50KGBvbiR7dHlwZX1gLCAoKSA9PiBmbi5jYWxsKGVsLCB3aW5kb3cuZXZlbnQpKTtcbiAgICAgIH0gZWxzZSBpZiAoZWwgJiYgZWwubGVuZ3RoKSB7XG4gICAgICAgICBmaWx0ZXIoZWwsIHR5cGUsIGZuKTtcbiAgICAgIH1cbiAgIH07XG59KSkoKTtcblxuLy8gYWRkRXZlbnQoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2EnKSwgJ2NsaWNrJywgZm4pO1xuXG5jb25zdCAkID0gZWwgPT4gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbCk7XG5cbi8vICQoJy5ib3gnKTtcblxuY29uc3QgbGF6eWxvYWQgPSAoY29udGFpbmVyLCBzZXR0aW5ncykgPT4ge1xuICAgY29uc3QgbGF6eUNsYXNzID0gJ2pzLWxhenlsb2FkLWltYWdlcyc7XG4gICByZXF1aXJlKFsnanF1ZXJ5JywgJ2xpYi9qcXVlcnkubGF6eWxvYWQnXSwgJCA9PiB7XG4gICAgICBjb25zdCBub2RlID0gJChjb250YWluZXIpO1xuICAgICAgY29uc3QgJGxhenlOb2RlID0gJChgLiR7bGF6eUNsYXNzfWAsIG5vZGUpO1xuICAgICAgJGxhenlOb2RlLmxhenlsb2FkKHNldHRpbmdzKS5yZW1vdmVDbGFzcyhsYXp5Q2xhc3MpO1xuICAgICAgbm9kZS5zY3JvbGwoKTtcbiAgIH0pO1xufTtcblxuLypcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIGUgPT4ge1xuICAgY29uc3Qgc3RhdGUgPSBlLnN0YXRlO1xuICAgaWYoIXN0YXRlKSByZXR1cm47XG4gICBpZihzdGF0ZS5sYXllcikge1xuICAgICAgY3JlYXRlX2xheWVyKHN0YXRlLmxheWVyLCBKU09OLnBhcnNlKHN0YXRlLnNldHRpbmdzKSk7XG4gICB9XG59LCBmYWxzZSk7XG4qLyJdfQ==
