# Рабочий процесс
Работа ведется в Gitlab.
Задачи ведутся в Gitlab Issues. Список актуальных задач находится в разделе Issues/Board, доска To Do.
Перед началом работ:
Создать новую ветку с названием - имя или @username, пример git checkout -b ivan
Перенести карточку задачи из To Do в Doing. После окончания работы над задачей, перенести карточку из Doing в Close it.
В коммите указывать номер задачи, пример git commit -m "#1 new commit"
Рекомендации

# Стек

Рекомендуется, но не ограничивается использование:
npm / yarn / bower для зависимостей
pug (ex jade)
stylus / sass / scss / postcss
gulp
bem
Минимально рекомендуется соглашение по именованию CSS классов.
Тип разделения block__elem_mod на усмотрение разработчика.

# Разметка

Не использовать инлайн стили и js.
Использование main, article, nav, figure, section и тд.
Для заголовков использовать h1, h2, h3 ...
Указывать язык <html lang="ru">.
Обьединять группы логически связанных классов class="a [ b c ]"
Добавлять open graph.
Придерживаться соглашения по именованию CSS классов.

# Стили

Не использовать !important. Если требуется переопределить стили сторонних библиотек, такой способ допускается.
Минимизировать каскад селекторов.
Задавать box model всему документу, не менять ее у отдельных элементов.
Делать простую анимацию при помощи CSS, не JS.
Для анимации вместо top, left, margin и тд - transform.
Не использовать сброс стилей (reset). Рекомендуется normalize.css.

# JS

Использовать js- префиксы в CSS классах для JS.
Избегать глобальных переменных.
Рекомендуется собирать скрипты в формате AMD или Common. Инструменты на усмотрение разработчика.
Как можно чаще комментировать.

# Изображения

Создавать спрайты.
Использовать иконочные шрифты или svg если доступны.
Фотографии и большие изображения без прозрачности сохранять в .jpg
Минимизировать вставки изображений через background-image, в том числе в атрибутах, нп <div style="background-image: url()">
На мобильных устройствах не загружать изображения которые есть в десктопной версии, но нет в мобильной. Не скрывать через display: none или другим способом.

# Git

Нельзя пушить в master.
Разработчик создает собственную ветку в которой ведет работу, пример git checkout -b ivan
Если работают несколько человек, создается общая ветка разработки dev или development. Переодически разработчики обновляют ветку development из своих веток.
Для работ которые нужно вынести в отдельную ветку, добавлять префиксы, пример feature- fix-.
Разделять коммиты файлов разработки и билда.

# Общее

Сжимать изображения.
Минифицировать CSS, JS для продакшена.
Для landingpage использовать lazyload.
Контент под wysiwyg оформлять стандартными элементами - заголовки, списки, т.д. Вместо классов использовать каскад, пример .wysiwyg h1, .wysiwyg p, .wysiwyg ul

# Рекомендации по совместной работе

1 tab состоит из пробелов, количество пробелов 4 (важно для отступозависимых кодов).
Не использовать общие названия CSS классов - header, footer, table, nav, btn и тд.
Проверить/установить неустановленные npm модули npm outdated npm update
Как можно чаще делать merge и push в общую ветку, чтобы избежать больших слияний.
Если появились merge конфликты и не ясно как их правильно решить, правильное решение - задать вопрос в чат.
Если появились проблемы/вопросы по использованию чужого блока/компонента - нужно создать комментарий в задаче с описанием вопроса. В комментарии указать @username автора компонента.
Добавлять префикс к названию изображений, для разделения неймспейсов, пример i-icon.png
Изображения класть в отдельные папки, по названию страницы, пример ./dev/img/pagename/*.png